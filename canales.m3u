#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/logo_15220759941.png" group-title="Chileiptv" , Chilevisión
http://live.hls.http.chv.ztreaming.com/chvhddesktop/chv-desktop.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1527809091.png" group-title="Chileiptv" , UCV 3
http://unlimited1-cl.dps.live/ucvtv2/ucvtv2.smil/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/logo_15009529051.png" group-title="Chileiptv" , CNN Chile
http://unlimited1-us.dps.live/cnn/cnn.smil/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1486483448.jpg" group-title="Chileiptv" , EmolTv
https://streaming.ecn.cl/hls/vivohd_hi/index.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1492004696.jpg" group-title="Chileiptv" , CDO
http://edge1.cl.grupoz.cl/cdofree/live/chunklist_w102518198.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/sinlogo.png" group-title="Chileiptv" , Poder Judicial
http://unlimited6-cl.digitalproserver.com/judicial/judicial.smil/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/logo_15220774751.png" group-title="Chileiptv" , Tendencias TV
https://v3.tustreaming.cl/tendenciastv/live1/tracks-v1a1/mono.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1516760274.jpg" group-title="Chileiptv" , Trailer TV
https://wowzaprod4-i.akamaihd.net/hls/live/253920/a33b581b/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/logo_15402143351.jpg" group-title="Chileiptv" , Big Radio
http://niutv.04.cl.cdnz.cl/niutv/smil:cdn.smil/master.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1521497155.png" group-title="Chileiptv" , Pandero Music CL
http://190.107.176.55:1935/panderocl/stream/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1521499421.png" group-title="Chileiptv" , Pandero Music TOP
http://evo.eltelon.com:1935/panderotop/smil:panderotop.smil/chunklist_w1822395328_b1500000_sleng.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1521683107.png" group-title="Chileiptv" , Gufo Chile
https://wowzaprod4-i.akamaihd.net/hls/live/253920/8be6db2d_1_540/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1521498861.png" group-title="Chileiptv" , Trailer TV Kids
http://evo.eltelon.com:1935/trailertvkids/smil:trailertvkids.smil/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/logo_15220956361.png" group-title="Chileiptv" , TV Senado
http://janus-tv-ply.senado.cl/playlist/stream.m3u8?s=tvsenado-hd

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/logo_15220956201.png" group-title="Chileiptv" , Cámara de Diputados
http://camara.03.cl.cdnz.cl/camara19/live/chunklist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1492012878.png" group-title="Chileiptv" , UesTV
http://cl.origin.grupoz.cl/uestv/live/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1528579859.png" group-title="Chileiptv" , Chilevisual
http://v3.tustreaming.cl/chilevisual/live1/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/logo_15006983391.jpg" group-title="Chileiptv" , Morrovision
http://video.crearchile.tv:8080/live/morrovision.mp4/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1521600661.png" group-title="Chileiptv" , La Pintana TV
http://cdn.vms.grupoz.cl/lapintanatv/content/5a7c8e25e19d3e641aca9fb2/hls/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1486476481.jpg" group-title="Chileiptv" , CampusTv
http://unlimited6-cl.dps.live/campustv/campustv.smil/campustv/livestream1/chunks.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/logo_15308557301.png" group-title="Chileiptv" , TV Maule
https://590c5dc5c3271.streamlock.net/dante271/dante271/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1487367120.png" group-title="Chileiptv" , TV 8 Concepción
https://593b04c4c5670.streamlock.net/8134/8134/chunklist_w1803894255.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1531174545.png" group-title="Chileiptv" , TVR
https://unlimited4-cl.dps.live/tvr/tvr.smil/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1486613665.jpg" group-title="Chileiptv" , Canal 21 Chillán
http://edge1.cl.grupoz.cl/canal21tv/live/chunklist_w148640593.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/logo_15074361401.jpg" group-title="Chileiptv" , Ñuble Tv
https://593b04c4c5670.streamlock.net:443/tvdaniel/tvdaniel/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/sinlogo.png" group-title="Chileiptv" , TecTV
http://evo.eltelon.com:1935/live/tec-tv/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1494898547.png" group-title="Chileiptv" , PinguinoTV
http://streaming.elpinguino.com:1935/live/pinguinotv_240p/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1487370992.png" group-title="Chileiptv" , ITV Patagonia
http://unlimited4-cl.dps.live/itv/itv.smil/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/logo_15006968221.jpg" group-title="Chileiptv" , TVRed Punta Arenas
http://45.33.58.155:1935/live/myStream/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/logo_15208845541.jpg" group-title="Chileiptv" , Gracia TV
http://v3.tustreaming.cl:80/graciatv/live1/index.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1487255653.png" group-title="Chileiptv" , ThemaTV
https://unlimited10-cl.dps.live/thema/thema.smil/thema/livestream2/chunks.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1487123934.png" group-title="Chileiptv" , Teletrack
http://unlimited2-cl.dps.live/sportinghd/sportinghd.smil/sportinghd/livestream2/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1501188521.jpg" group-title="Chileiptv" , FM Hot TV HD
http://fmhot.04.cl.cdnz.cl/fmhot/smil:cdn.smil/chunklist_b1800000_slesp.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1540214187.jpg" group-title="Chileiptv" , Tv Máxima
http://evo.eltelon.com:1935/live/maxima-fm/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1521688260.jpg" group-title="Chileiptv" , Genial Tv
http://v3.tustreaming.cl/genialtv/live1/tracks-v1a1/index.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/logo_15216878571.jpg" group-title="Chileiptv" , Lotería TV (ocacional)
http://unlimited1-cl.dps.live/loteria/loteria.smil/loteria/livestream1/chunks.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/logo_15216012621.png" group-title="Chileiptv" , Locomotion
http://locomotiontv.com/envivo/loco_channel/stream.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1521497894.png" group-title="Chileiptv" , Real Madrid TV
http://rmtvlive-lh.akamaihd.net/i/rmtv_1@154306/index_1000_av-p.m3u8?sd=10&amp;rebase=on?iptvgratis?chile.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/logo_15214261691.png" group-title="Chileiptv" , PE - Tv Perú
http://cdnh15.iblups.com/hls/R9WtilpKKB.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1521497398.png" group-title="Chileiptv" , Al Jazeera
http://aljazeera-eng-hd-live.hls.adaptive.level3.net/aljazeera/english2/index.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1521425230.png" group-title="Chileiptv" , INT Hispantv
https://5a61de8ed719d.streamlock.net/live/ngrp:hispantv_all/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/logo_15214283721.jpg" group-title="Chileiptv" , INT ABCNews
http://abclive.abcnews.com/i/abc_live4@136330/master.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1521496967.png" group-title="Chileiptv" , INT CBS News
http://cbsnewshd-lh.akamaihd.net/i/CBSNHD_7@199302/master.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1516760891.jpg" group-title="Chileiptv" , DE - Deutsche Welle
http://dwstream3-lh.akamaihd.net/i/dwstream3_live@124409/index_1_av-p.m3u8?sd=10&amp;play-only=primary&amp;rebase=on

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1521518110.png" group-title="Chileiptv" , JP -NHK Japan
https://nhkwtvglobal-i.akamaihd.net/hls/live/263941/nhkwtvglobal/index_1180.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1521982188.png" group-title="Chileiptv" , FR - France 24
http://f24hls-i.akamaihd.net/hls/live/221193/F24_EN_LO_HLS/master_900.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1522636293.png" group-title="Chileiptv" , INT CGTN Español
https://livees.cgtn.com/1000e/prog_index.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1521990467.png" group-title="Chileiptv" , RU - 24KPbIM
http://vid.techbee.pro:8080/crimea24/index.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1521991232.png" group-title="Chileiptv" , ES - Canal Extremadura
http://hlstv.canalextremadura.es/livetv/smil:multistream.smil/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1522637574.png" group-title="Chileiptv" , RedBull TV
https://rbmn-live.akamaized.net/hls/live/590964/BoRB-AT/master_928.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1522637965.png" group-title="Chileiptv" , PE - IPe
http://cdnh4.iblups.com/hls/OVJNKV4pSr.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1522638531.png" group-title="Chileiptv" , MX - Ingenio TV
http://live10.cdnmedia.tv/dgtvelive/smil:ingen30.smil/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1528340962.jpg" group-title="Chileiptv" , ExtremaTv
http://livestreamcdn.net:1935/ExtremaTV/ExtremaTV/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1528657893.png" group-title="Chileiptv" , AR - Derportv
http://186.33.227.198/DXTV/smil:DXTV.smil/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1528655960.png" group-title="Chileiptv" , CO - Cali TV
http://video.cehis.net/live-calitv/calitv1/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1528657520.png" group-title="Chileiptv" , CAM - Estación Espacial Int
http://iphone-streaming.ustream.tv/uhls/17074538/streams/live/iphone/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1532830938.png" group-title="Chileiptv" , VC ONLINE HD
https://593b04c4c5670.streamlock.net/8068/8068/chunklist_w2070277572.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/file_1533434576.png" group-title="Chileiptv" , Nasa
http://iphone-streaming.ustream.tv/uhls/6540154/streams/live/iphone/playlist.m3u8

#EXTINF:-1 tvg-logo="http://chileiptv.cl/img/logos/sinlogo.png" group-title="Chileiptv" , Wow
http://cdn.elsalvadordigital.com:1935/wowtv/wowtv/playlist.m3u8?







const task = require('./createTask');
const Firestore = require('@google-cloud/firestore');
const https = require('https');
//const rp = require('request-promise');
const firebase = require('firebase-admin');
const functions = require("firebase-functions");

const geolib = require('geolib');
//const polyUtil = require('node-geometry-library')
//const PolyUtil = require('../node_modules/node-geometry-library');
//import {SphericalUtil, PolyUtil} from "node-geometry-library"; //libreria para poligonos https://www.npmjs.com/package/node-geometry-library

var HOST = 'very-send-fcm-message-6moe6vzk5q-uc.a.run.app'
const MAX_SCHEDULE_LIMIT = 15 * 60 * 1000; // Represents 15 MINS in milliseconds.

const firestore = new Firestore({
  projectId: process.env.GOOGLE_CLOUD_PROJECT,
});

firebase.initializeApp()


exports.veryAddCodesForOrders = functions.pubsub
    .schedule('every 1 minutes')
    .onRun(async (context) => {
        const codesRef = firestore.collection("codes_orders")
        const codes = await codesRef.get()
        const codesSize = codes.size
        const date = new Date()
        const lastDate = date.getFullYear().toString().substring(3)
        var endId = 0

        functions.logger.info(lastDate);
    
        if (codesSize < 5) {
            const code = await codesRef.doc("codeEnd").get()
            var id = 0

            if (!code.exists) {
                id = lastDate + "0001"
            } else {
                id = code.data().id
            }
            
            functions.logger.info(endId.toString().substring(0, 1) + " ya");
            
            if (lastDate == id.toString().substring(0, 1)) {
                endId = parseInt(id)
            } else {
                endId = parseInt(lastDate + "0001")
            }                
            

            var aux = endId
            //var docPath = aux.toString()
            var codeNew = ""

            for(var i = 0; i < 20 - codesSize; i++) {
                aux = endId + i
                codeNew = "RV" + aux

                var data = {
                    id : codeNew,
                    status: true
                }

                await codesRef.doc(codeNew).set(data);
            }

            await firestore.collection("codes_orders").doc("codeEnd").set({id: codeNew, status: false});
        }

        return null;
    });


exports.veryNewOrder= functions.firestore.document('/empresas/{empresaId}/comercios/{comercioId}/orders/{orderId}')
.onCreate(async (snap, context) => {
    var queryCodeOrder = await firestore.collection("codes_orders").where('status', '==', true).orderBy("id", "asc").limit(1).get()
    var docCodeOrder = queryCodeOrder.docs[0]
    var queryTienda = await snap.data().comercio.ref.get()
    var queryCustomer = await snap.data().customer.ref.get()
    const customer = customerData(queryCustomer.data())
    const tienda = tiendaData(queryTienda.data())
    const order = orderData(snap.data())
    const queryMaster = await firestore.collection("accounts").doc("very-masters").collection("account").where('profile.ciudad', '==', order.customer.city).get()
    const master = masterData(queryMaster.docs[0].data())

    if (order.id != "") {
        return null
    } 


    return docCodeOrder.ref.delete().then(doc => {

        setCodeOrder(order.ref, docCodeOrder.data().id)

        var notificationVery = buildMessage('Pedido Enviado', 'tu pedido a sido enviado a tienda, espera la confirmación', customer.fcm, "VERY_ORDER_NOTIFICATION", "gota.mp3", ".MapsActivity")
        sendMessage(notificationVery)
        var notificationTienda = buildMessage('Nuevo pedido', 'ha llegado un nuevo pedido ' + docCodeOrder.data().id, tienda.fcm, "VERY_NEGOCIO", "newOrder.mp3", ".IntroActivity")
        sendMessage(notificationTienda)
        var notificationMaster = buildMessage('Nuevo pedido', 'ha llegado un nuevo pedido para ' + tienda.name, master.fcm, "VERY_MASTER", "newOrder.mp3", ".LoginActivity")
        sendMessage(notificationMaster)        
    })
})


function sendMessage(fcmMessage) {
    console.log(fcmMessage);
    var options = {
        hostname: HOST,
        path: '/',
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        }
        // … plus the body of your notification or data message
    };
    var request = https.request(options, function(resp) {
        resp.setEncoding('utf8');
        resp.on('data', function(data) {
            console.log('Message sent to Firebase for delivery, response:');
            console.log(data);
        });
    });
    request.on('error', function(err) {
        console.log('Unable to send message to Firebase');
        console.log(err);
    });
    request.write(JSON.stringify(fcmMessage));
    request.end();
}


function buildMessage(title, body, fcm, channel, sound, action) {
    const notification = {
        title: title,
        body: body
    }

    const data = {
        channel: channel
    }

    const androidNotification = {
        click_action: action,
        icon: "logo",
        sound: sound,
        color: "#7e55c3",
        channel_id: channel
    }

    const android = {
        direct_boot_ok: true,
        notification: androidNotification
    }

    const message = {
        token: fcm,
        notification: notification,
        data: data,
        android: android
    }
    
    return {message}
}


exports.veryUpdateOrder = functions.firestore.document('/empresas/{empresaId}/comercios/{comercioId}/orders/{orderId}')
.onUpdate(async (change, context) => {

    const order = orderData(change.after.data())
    const customerQuery = await order.customer.ref.get()
    const customer = customerData(customerQuery.data())
    const tiendaQuery = await order.comercio.ref.get()
    const tienda = tiendaData(tiendaQuery.data())
    const queryMaster = await firebase.firestore().collection("accounts").doc("very-masters").collection("account").where('profile.ciudad', '==', tienda.city).get()
    const master = masterData(queryMaster.docs[0].data())
    const ref = order.ref.path


    if (order.status == "TIENDA" && change.before.data().status == "PENDIENTE") {     
        const type = "STATUS"
        const timeExecute = 60000
        const timeNow = Date.now()
        const payload = {ref, type}
        
        const expirationTask = await task.createHttpTaskWithToken(
            payload,
            timeExecute,
            timeNow
        )

        await setTaskOrder(order.ref, expirationTask)

        const notificationVery = buildMessage("Acepta el tiempo de espera", "¡Tu pedido de " + order.comercio.name + " estará listo en " + (order.millisTienda / 1000) / 60 + " minutos", customer.fcm, "VERY_ORDER_ACCEPT", "acceptOrder.mp3", "")
        return sendMessage(notificationVery)


    } else if (order.status == "CONFIRMADO" && change.before.data().status == "TIENDA") {
        
        if (order.millisTienda > MAX_SCHEDULE_LIMIT) {
            const type = "ALARM"
            const timeExecute = order.millisTienda - 720000
            const timeNow = Date.now()
            const payload = {ref, type}
        
            const expirationTask = await task.createHttpTaskWithToken(
                payload,
                timeExecute,
                timeNow
            )

            await setTaskOrder(order.ref, expirationTask)
        }
        

        var notificationVery = buildMessage('Tu pedido esta preparándose', "¡Tu pedido de " + order.comercio.name + " estará listo en " + (order.millisTienda / 1000) / 60 + " minutos", customer.fcm, "VERY_ORDER_NOTIFICATION", "gota.mp3", ".MapsActivity")
        sendMessage(notificationVery)

        var notificationTienda = buildMessage('Pedido Confirmado', customer.name + " confirmó el pedido", tienda.fcm, "VERY_NEGOCIO_CONFIRMACION", "newOrder.mp3", ".LoginActivity")
        sendMessage(notificationTienda)   
  
        var notificatioMaster = buildMessage('Pedido programado', 'tiene un pedido programado de ' + tienda.name, master.fcm, "VERY_MASTER_CONFIRMACION", "newOrder.mp3", ".LoginActivity")
        sendMessage(notificatioMaster)   

        try {
            await task.deleteHttpTask(change.after.data().expirationTask)
        
        } catch (error) {
            console.error(Error(error.message));
            return
        }

        return

    } else if (order.status == "ASIGNADO" && change.before.data().status != "ASIGNADO") {     
        const repartidorQuery = await order.repartidor.ref.get()
        const ranger = rangerData(repartidorQuery.data())

        const notificationRanger = buildMessage("Pedido Nuevo", "¡Pedido asignado " + tienda.name, ranger.fcm, "RANGER_PEDIDO_NUEVO", "acceptOrder.mp3", ".IntroActivity")
        sendMessage(notificationRanger)

        const notificationVery = buildMessage("Repartidor asignado", ranger.name + " llevará tu pedido", customer.fcm, "VERY_ORDER_ACCEPT", "acceptOrder.mp3", "")
        sendMessage(notificationVery)

        return

    } else if (order.status == "ACEPTADO" && change.before.data().status != "ACEPTADO") {   
        if (order.repartidor != null) {
            try {
                await task.deleteHttpTask(change.after.data().expirationTask)
            
            } catch (error) {
                console.error(Error(error.message));
                return
            }
        }

        return

    } else if (order.status == "LISTO" && change.before.data().status != "LISTO") {     
        const repartidor = order.repartidor

        if (repartidor != null) {
            const repartidorQuery = await order.repartidor.ref.get()
            const ranger = rangerData(repartidorQuery.data())

            const notificationRanger = buildMessage("Pedido Listo", "¡El pedido de " + tienda.name + " esta esperando que lo recojas", ranger.fcm, "RANGER_PEDIDO_NUEVO", "acceptOrder.mp3", ".IntroActivity")
            sendMessage(notificationRanger)
        }

        const notificatioMaster = buildMessage('Pedido Listo', 'Pedido listo de ' + tienda.name, master.fcm, "VERY_MASTER_CONFIRMACION", "newOrder.mp3", ".LoginActivity")
        sendMessage(notificatioMaster)  

        await change.after.ref.update({
            expirationTask: firebase.firestore.FieldValue.delete()
        })

        try {
            await task.deleteHttpTask(change.after.data().expirationTask)
        
        } catch (error) {
            console.error(Error(error.message));
            return
        }
        
        return
    }
    
    return null
})


const setCodeOrder = function(ref, data) {
    ref.set({
        order: {
            id: data
        } 
    }, {merge: true})
}


const setTaskOrder = async function(ref, data) {
    await ref.set({
        expirationTask: data
    }, {merge: true})
}


const customerData = function(data) {
    const customer = {
        address: data.address,
        fcm: data.fcm,
        name: data.name
    }

    return customer
}

const rangerData = function(data) {
    const customer = {
        address: data.address,
        city: data.city.locality,
        fcm: data.fcm,
        name: data.profile.name + " " + data.profile.lastName
    }

    return customer
}

const tiendaData = function(data) {
    const tienda = {
        address: data.address,
        city: data.city.locality,
        fcm: data.fcm,
        name: data.nombre
    }

    return tienda
}

const masterData = function(data) {
    const master = {
        city: data.profile.ciudad,
        fcm: data.fcm,
        name: data.profile.name
    }

    return master
}

const orderData = function(data) {
    var repartidor = null
  
    if (data.repartidor != null) {
        repartidor = {
            name: data.repartidor.name,
            ref: data.repartidor.ref
        }
    }
    
    const order = {
        id: data.order.id,
        customer: {
            name: data.customer.name,
            ref: data.customer.ref,
            city: data.customer.location.city
        },
        comercio: {
            name: data.comercio.name,
            ref: data.comercio.ref,
            city: data.comercio.location.city
        },
        repartidor: repartidor,
        ref: data.thisRef,
        millisTienda: data.millisTienda,
        status: data.status,
        timePreparation: data.timePreparation
    }
  
    return order
  }



const storeData = async function(snap) {
    var cat = await snap.data().sectorEconomico.get()

    const tienda = {
        name: snap.data().nombre,
        city: snap.data().city.subadmin,
        reference: snap.ref.path,
        id: snap.data().id,
        categoria: cat.data().name,
        abierto: snap.data().abierto
    }

    return tienda
}



exports.veryWriteComercio = functions.firestore.document('/empresas/{empresaId}/comercios/{comercioId}')
.onWrite(async (change, context) => {
        
        let store = await storeData(change.after)
        var queryCustomers = await firestore.collectionGroup("clientes").where('address.city', '==', store.city).get()
        
        queryCustomers.forEach(async (doc) => {
            //doc.ref.set(store, {merge: true})
            const areasStore = change.after.data().areas
            const locationCustomer = doc.data().address.location

            console.log(doc.data().id, ' => ', doc.data().name);            

            for (const data of areasStore) {
                console.log(data['name'])
                var areas = []

                for (const point of data['distributionArea']) {
                    const latLng = { latitude: point.latitude, longitude: point.longitude }
                    areas.push(latLng)
                }
                 
                const response = geolib.isPointInPolygon({ latitude: locationCustomer.latitude, longitude: locationCustomer.longitude }, areas);
                console.log(response)

                if (response) {
                    var queryStoresSearchs = await doc.ref.collection("stores_copy").doc(context.params.comercioId)
                    queryStoresSearchs.set(store, {merge: true})
                    
                    return
                }
            }
        });

        return 
  })


exports.veryWriteCliente = functions.firestore.document('/clientes/{clienteId}')
  .onWrite(async (change, context) => {
    
    let customerBefore = change.before.data()
    let customerAfter = change.after.data()

    if (customerBefore.address.location != customerAfter.address.location){
        var storesQuery = await firestore.collectionGroup("comercios").where('city.subadmin', '==', customerAfter.address.city).get()

        storesQuery.forEach(async (doc) => {
            //doc.ref.set(store, {merge: true})
            let store = await storeData(doc)
            const areasStore = doc.data().areas
            const locationCustomer = customerAfter.address.location           

            for (const data of areasStore) {
                console.log(data['name'])
                var areas = []

                for (const point of data['distributionArea']) {
                    const latLng = { latitude: point.latitude, longitude: point.longitude }
                    areas.push(latLng)
                }
                 
                const response = geolib.isPointInPolygon({ latitude: locationCustomer.latitude, longitude: locationCustomer.longitude }, areas);
                console.log(response)

                if (response) {
                    var queryStoresSearchs = await change.after.ref.collection("stores_copy").doc(store.id)
                    queryStoresSearchs.set(store, {merge: true})
                    
                    return
                }
            }
        });
    }

    return
  })

